{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "gcode",
  "scopeName": "source.gcode",
  "foldingStartMarker": "^O([A-Z0-9]{1,4})(?=\\s|$|\\()",
  "foldingStopMarker": "^RTS$",
  "patterns": [
    {
      "include": "#sub-programs"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#address-alphanumeric"
    },
    {
      "include": "#address-integer"
    },
    {
      "include": "#address-decimal"
    },
    {
      "include": "#variables"
    },
    {
      "include": "#comments"
    }
  ],
  "repository": {
    "operators": {
      "patterns": [
        {
          "name": "operator.goto.gcode",
          "match": "^GOTO (N\\d{1,5}|N[A-Z][A-Z0-9]{0,4})$"
        },
        {
          "name": "operator.if.gcode",
          "match": "IF\\[.*\\](N\\d{1,5}|N[A-Z][A-Z0-9]{0,4})"
        },
        {
          "name": "operator.comparison.gcode",
          "match": " (LT|LE|EQ|NE|GE|GT) "
        },
        {
          "name": "operator.logical.gcode",
          "match": " (AND|OR|EOR|NOT) "
        },
        {
          "name": "operator.arithmetic.gcode",
          "match": "([\\+\\-\\*\\/])"
        },
        {
          "name": "operator.other.gcode",
          "match": "(SIN|COS|TAN|ATAN|ATAN2|SQRT|ABS|BIN|BCD|ROUND|FIX|DROUND|DFIX|DFUP|MOD)\\[(.*)\\]",
          "captures": {
            "2": {
              "patterns": [
                {
                  "include": "#variables"
                }
              ]
            }
          }
        }
      ]
    },
    "sub-programs": {
      "comment": "Keywords related to sub programs",
      "patterns": [
        {
          "name": "keyword.subcall.gcode",
          "match": "CALL O([A-Z0-9]{1,4}).*"
        },
        {
          "name": "keyword.sub.gcode",
          "match": "^O([A-Z0-9]{1,4})(?=\\s|$|\\()"
        },
        {
          "name": "keyword.subend.gcode",
          "match": "^RTS$"
        }
      ]
    },
    "variables": {
      "comment": "Local, common, and system variables",
      "patterns": [
        {
          "name": "var.local.okuma.gcode",
          "match": "([ABCDEFGHIJKLMPQRSTUWXYZ][A-Z][A-Z0-9]{0,2})"
        },
        {
          "name": "var.common.okuma.gcode",
          "match": "VC(\\d{1,4}|\\[(\\d{1,4}|VC\\d{1,4}|[A-Z]{2}[A-Z0-9]{0,2})\\])"
        },
        {
          "name": "var.system.okuma.gcode",
          "match": "V[A-Z][A-Z0-9]{1,4}(\\[.*\\])?"
        },
        {
          "name": "var.local.fanuc.gcode",
          "match": "\\#([1-9]|[12][0-9]|3[0-3])(?!\\d)"
        },
        {
          "name": "var.common.fanuc.gcode",
          "match": "\\#([1-9][0-9]{2}})"
        },
        {
          "name": "var.system.fanuc.gcode",
          "match": "\\#([1-9][0-9]{3})(?!\\d)"
        }
      ]
    },
    "address-alphanumeric": {
      "comment": "A single letter followed by one or more alphanumeric characters",
      "patterns": [
        {
          "name": "word.d.gcode",
          "match": "D([ABC]|\\d+)"
        },
        {
          "name": "word.h.gcode",
          "match": "H([ABC]|\\d+)"
        },
        {
          "name": "word.n.gcode",
          "match": "^(N)(\\d{1,5}|[A-Z][A-Z0-9]{0,4})(?=\\s|$|\\()"
        }
      ]
    },
    "address-integer": {
      "comment": "A single letter followed by an unsigned integer or an expression",
      "patterns": [
        {
          "name": "word.g.gcode",
          "match": "G(\\d{1,3}|(?=\\=))"
        },
        {
          "name": "word.m.gcode",
          "match": "M(\\d{1,3}|(?=\\=))"
        },
        {
          "name": "word.t.gcode",
          "match": "T(\\d+|(?=\\=))"
        }
      ]
    },
    "address-decimal": {
      "comment": "A single letter followed by a signed number, integer or decimal",
      "patterns": [
        {
          "match": "([ABCEFIJKLPQRSUVWXYZ])([\\-\\+]?\\d+\\.?\\d*|\\.\\d+|(?=\\=))",
          "captures": {
            "0": {
              "patterns": [
                {
                  "name": "word.a.gcode",
                  "match": "A.*"
                },
                {
                  "name": "word.b.gcode",
                  "match": "B.*"
                },
                {
                  "name": "word.c.gcode",
                  "match": "C.*"
                },
                {
                  "name": "word.e.gcode",
                  "match": "E.*"
                },
                {
                  "name": "word.f.gcode",
                  "match": "F.*"
                },
                {
                  "name": "word.i.gcode",
                  "match": "I.*"
                },
                {
                  "name": "word.j.gcode",
                  "match": "J.*"
                },
                {
                  "name": "word.k.gcode",
                  "match": "K.*"
                },
                {
                  "name": "word.l.gcode",
                  "match": "L.*"
                },
                {
                  "name": "word.p.gcode",
                  "match": "P.*"
                },
                {
                  "name": "word.q.gcode",
                  "match": "Q.*"
                },
                {
                  "name": "word.r.gcode",
                  "match": "R.*"
                },
                {
                  "name": "word.s.gcode",
                  "match": "S.*"
                },
                {
                  "name": "word.u.gcode",
                  "match": "U.*"
                },
                {
                  "name": "word.v.gcode",
                  "match": "V.*"
                },
                {
                  "name": "word.w.gcode",
                  "match": "W.*"
                },
                {
                  "name": "word.x.gcode",
                  "match": "X.*"
                },
                {
                  "name": "word.y.gcode",
                  "match": "Y.*"
                },
                {
                  "name": "word.z.gcode",
                  "match": "Z.*"
                }
              ]
            }
          }
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.parens.gcode",
          "begin": "\\(",
          "end": "\\)"
        },
        {
          "name": "comment.semi-colon.gcode",
          "begin": "\\;",
          "end": "$"
        }
      ]
    }
  }
}